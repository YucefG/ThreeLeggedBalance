<launch>
   <!-- these are the arguments you can pass this launch file, for example paused:=true -->
   <arg name="paused" default="false"/>
   <arg name="use_sim_time" default="true"/>
   <arg name="gui" default="true"/>
   <arg name="headless" default="false"/>
   <arg name="debug" default="false"/>
   <arg name="verbose" default="false"/>
   <arg name="robot_type" default="go1"/>
   <arg name="robot_spawn" default="-x 6 -y 4 -z 1.5 -Y 3.1415"/>
   <arg name="rviz"  default="false"/>

   <!-- <rosparam file="$(find legged_gazebo)/config/default.yaml" command="load"/> -->
   <!-- <param name="legged_robot_description" command="$(find xacro)/xacro $(find legged_unitree_description)/urdf/robot.xacro
       robot_type:=$(arg robot_type)"/> -->

   <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
   <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find ICRA2023_Quadruped_Competition)/worlds/competition.world"/>
      <arg name="debug" value="$(arg debug)" />
      <arg name="gui" value="$(arg gui)" />
      <arg name="paused" value="$(arg paused)"/>
      <arg name="use_sim_time" value="$(arg use_sim_time)"/>
      <arg name="headless" value="$(arg headless)"/>
      <arg name="verbose" value="$(arg verbose)"/>
   </include>

   <group ns="competition_map">
      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find ICRA2023_Quadruped_Competition)/urdf/map.urdf.xacro'" /> 


      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
         args="-urdf -param robot_description -model competition_map" />
   </group> 

    <include file="$(find legged_unitree_description)/launch/spawn_robot.launch">
      <arg name="robot_type" value="$(arg robot_type)"/>
      <arg name="robot_spawn" value="$(arg robot_spawn)"/>
   </include>

   <group if="$(arg rviz)">
      <node pkg="rviz" type="rviz" name="rviz" respawn="false" output="screen"
         args="-d $(find legged_unitree_description)/launch/rviz_config.rviz"/>
   </group>
</launch>
